{"version":3,"file":"static/webpack/static\\development\\pages\\createproduct.js.506e755c6cf38b2761f8.hot-update.js","sources":["webpack:///./pages/createproduct.js"],"sourcesContent":["import { Row, Col, Form, Input, Select, DatePicker, TimePicker, InputNumber,Button, Modal, Spin } from 'antd'\nimport axios from 'axios'\nimport Router from 'next/router'\nimport Link from 'next/link'\nimport moment, { now } from 'moment';\nimport { base_url } from './components/base_url'\nimport { Header } from './components/Header'\nimport { Footer } from './components/Footer'\nimport { TourImage } from './components/TourImage'\nimport Googlemap from './components/Googlemap'\nimport Newgooglemap from './components/Newgooglemap'\nimport { createproduct_top_banner } from './components/images'\nimport { language_list } from './components/language_list'\nimport '../static/css/createproduct.css'\n\nimport DayPicker, { DateUtils } from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport '../static/css/mypicker.css'\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst { RangePicker } = DatePicker;\nconst { TextArea } = Input;\n\nconst languageOption = language_list.map((language) => \n    <Option key={language.name.toString()} value={language.name}>{language.name}</Option>\n)\n\n// Type of tour Select\nfunction tourTypeChange(value) {\n    console.log(`selected ${value}`);\n}\n\n// city select\nfunction cityChange(value) {\n    console.log(`selected ${value}`);\n}\n\n// Booking period Select\nfunction onChangeBookingPeriod(value) {\n    console.log(`selected ${value}`);\n}\n\nfunction languageChange(value) {\n    console.log(`selected ${value}`);\n}\n\n// Number of Guest\nfunction numGuestonChange(value) {\n    console.log('changed', value);\n}\n\n// Price of tour\nfunction priceChange(value) {\n    console.log('changed', value);\n}\n\n\nclass CreateProductForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            filterdata: [],\n            seasondate: [],\n            notAllowedDate: '',\n            uploadedFiles: [],\n            loading: false,\n            mount: false,\n            meetingpoint: '',\n            value:[],\n            briefLength: 0,\n            detailLength: 0,\n            selectedDays: [],\n            textareaDays: [],\n            pickerClassName: 'myPickerHide'\n        }\n        this.handleDayClick = this.handleDayClick.bind(this);\n    }\n\n    handleDayClick(day, { selected }) {\n        const { selectedDays } = this.state;\n        if (selected) {\n          const selectedIndex = selectedDays.findIndex(selectedDay =>\n            DateUtils.isSameDay(selectedDay, day)\n          );\n          selectedDays.splice(selectedIndex, 1);\n        } else {\n          selectedDays.push(day);\n        }\n        this.setState({ selectedDays });\n        console.log(this.state.selectedDays)\n    }\n\n    onClickTextarea = () => {\n        this.state.pickerClassName === 'myPickerHide' ?\n        this.setState({\n            pickerClassName: 'myPickerShow'\n        })\n        :\n        this.setState({\n            pickerClassName: 'myPickerHide'\n        })\n    }\n\n    componentDidMount = () => {\n        this.setState({\n            mount: true\n        })\n    }\n    \n    autocompleteCountry = (value) => {\n        if (value == '')\n            this.setState({\n                filterdata: []\n            })\n        else\n            this.setState({\n                filterdata: countries.filter((s) => s.toLowerCase().substring(0, value.length) === value.toLowerCase())\n            })\n    }\n    autocompleteLanguage = (value) => {\n        if (value == '')\n            this.setState({\n                filterdata: []\n            })\n        else\n            this.setState({\n                filterdata: languages.filter((s) => s.toLowerCase().substring(0, value.length) === value.toLowerCase())\n            })\n    }\n\n    tournameOnChange = (e) => {\n        this.setState({\n            tourname: e.target.value\n        })\n        console.log(this.state.tourname)\n    }\n\n    // meetingTimeOnChange = (time, timeString) => {\n    //     console.log(\"meeting Time:\", timeString)\n    //     this.setState({\n    //         meetingtime: timeString\n    //     })\n    // }\n\n    // durationOnChange = (time, timeString) => {\n    //     console.log(\"Duration Hours:\", timeString)\n    //     this.setState({\n    //         durationhours: timeString\n    //     })\n    // }\n\n    // meeting Time Select\n    onChangeMeetingTime = (value) => {\n        console.log(`selected ${value}`);\n    }\n    // duration Select\n    onChangeDuration = (value) => {\n        console.log(`selected ${value}`);\n    }\n\n    seasonOnChange = (date, dateString) => {\n        console.log(\"season date form ~ to\", dateString)\n        this.setState({\n            seasondate: dateString\n        })\n    }\n\n    onChangeNotAllowed = (date, dateString) => {\n        console.log(\"Not allowed Date:\", dateString)\n        this.setState({\n            notAllowedDate: dateString\n        })\n    }\n\n    getUploadFiles = (data) =>  {\n        this.setState({\n            uploadedFiles: data\n        })\n        console.log(\"Uploaded File list:\", this.state.uploadedFiles)\n    }\n\n    getMeetingPoint = (point) => {\n        this.setState({\n            meetingpoint: point\n        })\n        console.log(\"MeetingPoint:\", this.state.meetingpoint)\n    }\n\n    // onChange = (value) => {\n    //     console.log('DatePicker change: ', value && value.map(item => item.format(format)));\n    //     this.setState({\n    //       value,\n    //     });\n    //   }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                this.setState({\n                    loading: true\n                })\n                console.log('values', values)\n                // console.log('meetingtime:', this.state.meetingtime);\n                // console.log('durationhours:', this.state.durationhours);\n                // console.log('seasondate', this.state.seasondate);\n                // const meetingtime = this.state.meetingtime\n                // const durationhours = this.state.durationhours\n                const seasondate = this.state.seasondate\n                const uploadedFiles = this.state.uploadedFiles\n                const notAllowedDate = this.state.notAllowedDate\n                const meetingpoint = this.state.meetingpoint\n                console.log('uploaded Files: ', uploadedFiles);\n                // console.log('Received values of form: ', values);\n                console.log(\"logged in username:\", sessionStorage.getItem('session_username'))\n                const username = sessionStorage.getItem('session_username')\n\n                this.refs.UploadingTourImage.handleUpload();\n\n                axios({\n                    method: 'post',\n                    url: base_url + '/api/test_register_product',\n                    data: {\n                        values, \n                        seasondate,\n                        notAllowedDate,\n                        uploadedFiles,\n                        username,\n                        meetingpoint\n                    }\n                })\n                .then((response) => {\n                    console.log('response:', response);\n                    if (response.data['type'] === 'success'){\n                        Router.push(\"/successproduct\")\n                    } else {\n                        this.setState({\n                            loading: false\n                        })\n                        Modal.error({\n                            title: 'Product registeration has been failed!',\n                            content: 'Please try again !',\n                        });\n                    }\n                })\n                .catch((error) => {\n                    console.log('error:', error);\n                    this.setState({\n                        loading: false\n                    })\n                    Modal.error({\n                        title: 'Product registeration has been failed!',\n                        content: 'Please try again !',\n                    });\n                });\n            }\n        });\n    }\n    \n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        return(\n            <div>\n                <Row>\n                    <Col span={24} style={{height:'20vw',position:'relative'}}>\n                        <img src={createproduct_top_banner} alt='createproduct_top_banner' style={{width:'100%',position:'absolute',left:0,bottom:0}}/>\n                    </Col>\n                </Row>\n                <Row type=\"flex\" justify=\"center\" style={{marginTop:30}}>\n                    <h1>Create a Product</h1>\n                </Row>\n                <Row type=\"flex\" justify=\"center\">\n                    <Col span={12}>\n                        <p>\n                            모든 내용은 영어 또는 가이드가 진행될 외국어로 작성해주셔야 합니다. 작성된 상품은 '오늘의 친구'에서 검토 후 수정 요청 또는 상품등록을 진행할 예정입니다. 상품에 대한 검증이 필요할 경우 '오늘의 친구'매니저가 입력된 연락처로 안내를 드린 후, 투어일정을 함께 체험하여 컨설팅을 진행할 예정이며 그 이후 상품등록을 진행합니다. 상품검증시 발생하는 비용을 '오늘의 친구'에서 지불 상품의 질을 높이고 투어상품 개발자의 편의를 돕고자 상품게시까지 일정 시간이 소요될수 있음을 참고해주시기 바랍니다!\n                        </p>\n                    </Col>\n                </Row>\n                <Row type=\"flex\" justify=\"center\">\n                    <Col span={12}>\n                        \n                        <Form onSubmit={this.handleSubmit}>\n                            <div style={{textAlign:\"center\",border:\"1px solid rgba(0, 0, 0, 0.2)\",borderRadius:10,padding:\"20px 20px\",width:\"100%\",margin:\"0 auto\"}}>\n                                <Row type=\"flex\" justify=\"end\">\n                                    <span style={{color:\"red\",fontSize:\".8em\"}}>*영어로 작성해 주세요</span>\n                                </Row>\n\n                                {/* 1. Basic Information */}\n                                <Row type=\"flex\" justify=\"start\" style={{marginBottom:20}}>\n                                    <span style={{fontSize:\"1.5em\"}}>1. Basic Information</span>\n                                </Row>\n                                <Row type=\"flex\" justify=\"space-around\" style={{textAlign:\"left\"}}>\n                                    <Col span={7}>\n                                        <FormItem\n                                            label=\"Name of tour\"\n                                        >\n                                            {getFieldDecorator('tourname', {\n                                                rules: [{\n                                                    type: 'string', message: 'The input is not valid tour name!',\n                                                }, {\n                                                    required: true, message: 'Please input your tour name!',\n                                                }],\n                                            })(\n                                                <Input size=\"large\" onChange={this.tournameOnChange} />\n                                            )}\n                                        </FormItem>\n                                    </Col>\n                                    <Col span={7}>\n                                        <FormItem\n                                            label=\"Type of tour\"\n                                        >\n                                            {getFieldDecorator('tourtype', {\n                                                rules: [{\n                                                    required: true, message: 'Please select your tour type!'\n                                                }]\n                                            })(\n                                                <Select size=\"large\" onChange={tourTypeChange}>\n                                                    <Option value=\"Night Tour\">Night Tour</Option>\n                                                    <Option value=\"Private Car Tour\">Private Car Tour</Option>\n                                                    <Option value=\"Food Tour\">Food Tour</Option>\n                                                    <Option value=\"Climbing Tour\">Climbing Tour</Option>\n                                                    <Option value=\"Walking Tour\">Walking Tour</Option>\n                                                    <Option value=\"Bicycle Tour\">Bicycle Tour</Option>\n                                                    <Option value=\"Market Tour\">Market Tour</Option>\n                                                    <Option value=\"Nature Tour\">Nature Tour</Option>\n                                                    <Option value=\"Other\">Other</Option>\n                                                </Select>\n                                            )}\n                                        </FormItem>\n                                    </Col>\n                                    <Col span={7}>\n                                        <FormItem\n                                            label=\"Country\"\n                                        >\n                                            {getFieldDecorator('country', {\n                                                initialValue: 'Korea',\n                                                rules: [{\n                                                    required: true, message: 'Please input your country!'\n                                                }]\n                                            })(\n                                                <Input size=\"large\" />\n                                            )}\n                                        </FormItem>\n                                    </Col>\n                                </Row>\n                                <Row type=\"flex\" justify=\"space-around\" style={{textAlign:\"left\"}}>\n                                    <Col span={7}>\n                                        <FormItem\n                                            label=\"City\"\n                                        >\n                                            {getFieldDecorator('city', {\n                                                rules: [{\n                                                    required: true, message: 'Please select your tour city!'\n                                                }]\n                                            })(\n                                                <Select name=\"city\" size=\"large\" onChange={cityChange}>\n                                                    <Option value=\"seoul\">Seoul</Option>\n                                                    <Option value=\"busan\">Busan</Option>\n                                                    <Option value=\"gyeongju\">Gyeongju</Option>\n                                                    <Option value=\"jeonju\">Jeonju</Option>\n                                                    <Option value=\"jejuisland\">Jejuisland</Option>\n                                                    <Option value=\"daegu\">Daegu</Option>\n                                                    <Option value=\"others\">Others</Option>\n                                                </Select>\n                                            )}\n                                        </FormItem>\n                                    </Col>\n                                    <Col span={15}>\n                                        <FormItem\n                                            label=\"Language(3개국어까지 입력가능)\"\n                                        >\n                                            {getFieldDecorator('language', {\n                                                rules: [{\n                                                    required: true, message: 'Please input languages!'\n                                                }, {\n                                                    type: 'array',\n                                                }]\n                                            })(\n                                                <Select\n                                                    mode=\"multiple\"\n                                                    style={{ width: '100%' }}\n                                                    placeholder=\"Please select languages\"\n                                                    onChange={languageChange}\n                                                    size=\"large\"\n                                                >\n                                                    {languageOption}\n                                                </Select>\n                                            )}\n                                        </FormItem>\n                                    </Col>\n                                </Row>\n                                <Row type=\"flex\" justify=\"space-around\" style={{textAlign:\"left\"}}>\n                                    <Col span={23}>\n                                        <FormItem\n                                            label=\"Brief description of Tour\"\n                                        >\n                                            {getFieldDecorator('briefDesc', {\n                                                rules: [{\n                                                    required: true, message: 'Please input your brief desciption of your tour!'\n                                                }]\n                                            })(\n                                                <TextArea \n                                                    autosize={{ minRows: 3, maxRows: 8 }} \n                                                    maxLength={250} \n                                                    placeholder=\"간단하게 당신의 상품특징에 대해 설명해주세요.\" \n                                                    onChange={e => this.setState({briefLength: e.target.value.length})} \n                                                />\n                                            )}\n                                            <span style={{float:'right'}}>{this.state.briefLength}/250</span>\n                                        </FormItem>\n                                    </Col>\n                                </Row>\n                                <Row type=\"flex\" justify=\"space-around\" style={{textAlign:\"left\"}}>\n                                    <Col span={23}>\n                                        <FormItem\n                                            label=\"Detailed description of Tour\"\n                                        >\n                                            {getFieldDecorator('detailedDesc', {\n                                                rules: [{\n                                                    required: true, message: 'Please input your detail desciption of your tour!'\n                                                }]\n                                            })(\n                                                <TextArea \n                                                    autosize={{ minRows: 6, maxRows: 10 }} \n                                                    maxLength={1200} \n                                                    placeholder=\"당신이 만든 local여행에 대해 설명을 자유롭게 작성해주세요. Tip! 당신의 투어만이 가지고 있는 특징에 대해 설명해주세요. 외국인은 언제나 local다움과 funny한 상품을 찾고 있습니다.\" \n                                                    onChange={e => this.setState({detailLength: e.target.value.length})} \n                                                />\n                                            )}\n                                            <span style={{float:'right'}}>{this.state.detailLength}/1200</span>\n                                        </FormItem>\n                                    </Col>\n                                </Row>\n                                <Row type=\"flex\" justify=\"space-around\" style={{textAlign:\"left\"}}>\n                                    <Col span={23}>\n                                        <FormItem\n                                            label=\"Hash Tag (당신의 여행이 가지고 있는 특징을 4개의 Hash Tag 로 보여주세요.)\"\n                                        >\n                                            {getFieldDecorator('hashtag', {\n                                                rules: [{\n                                                    required: true, message: 'Please input your hash tag of your tour!'\n                                                }]\n                                            })(\n                                                <Input size=\"large\" placeholder=\"Ex) #seoul #hiking #bicycle #picnic\" />\n                                            )}\n                                        </FormItem>\n                                    </Col>\n                                </Row>\n                                <Row type=\"flex\" justify=\"space-around\" style={{textAlign:\"left\"}}>\n                                    <Col span={23}>\n                                        <FormItem\n                                            label=\"Tour Image (투어를 대표하는 이미지를 넣어주세요.)\"\n                                        >\n                                            <TourImage getUploadFileList={this.getUploadFiles} ref='UploadingTourImage'/>\n                                        </FormItem>\n                                    </Col>\n                                </Row>\n                                \n                                {/* 2. Course Information */}\n                                <Row type=\"flex\" justify=\"start\" style={{marginTop:30,marginBottom:20}}>\n                                    <span style={{fontSize:\"1.5em\"}}>2. Course Information</span>\n                                </Row>\n                                <Row type=\"flex\" justify=\"space-around\" style={{textAlign:\"left\"}}>\n                                    <Col span={7}>\n                                        <FormItem\n                                            label=\"Meeting Time\"\n                                        >   \n                                            {getFieldDecorator('meetingTime', {\n                                                rules: [{\n                                                    required: true, message: 'Please input meeting time!'\n                                                }]\n                                            })(\n                                                // <TimePicker onChange={this.meetingTimeOnChange} defaultOpenValue={moment('00:00:00', 'HH:mm:ss')} style={{width:\"100%\"}} size=\"large\"/>\n                                                <Select size=\"large\" onChange={this.onChangeMeetingTime}>\n                                                    <Option value=\"09:00\">09:00</Option>\n                                                    <Option value=\"09:30\">09:30</Option>\n                                                    <Option value=\"10:00\">10:00</Option>\n                                                    <Option value=\"10:30\">10:30</Option>\n                                                    <Option value=\"11:00\">11:00</Option>\n                                                    <Option value=\"11:30\">11:30</Option>\n                                                    <Option value=\"12:00\">12:00</Option>\n                                                    <Option value=\"12:30\">12:30</Option>\n                                                    <Option value=\"13:00\">13:00</Option>\n                                                    <Option value=\"13:30\">13:30</Option>\n                                                    <Option value=\"14:00\">14:00</Option>\n                                                    <Option value=\"14:30\">14:30</Option>\n                                                    <Option value=\"15:00\">15:00</Option>\n                                                    <Option value=\"15:30\">15:30</Option>\n                                                    <Option value=\"16:00\">16:00</Option>\n                                                    <Option value=\"16:30\">16:30</Option>\n                                                    <Option value=\"17:00\">17:00</Option>\n                                                    <Option value=\"18:30\">18:30</Option>\n                                                    <Option value=\"19:00\">19:00</Option>\n                                                    <Option value=\"19:30\">19:30</Option>\n                                                    <Option value=\"20:00\">20:00</Option>\n                                                </Select>\n                                            )}\n                                        </FormItem>\n                                    </Col>\n                                    <Col span={7}>\n                                        <FormItem\n                                            label=\"Duration (투어 소요시간)\"\n                                        >\n                                            {getFieldDecorator('duration', {\n                                                rules: [{\n                                                    required: true, message: 'Please input duration of your tour!'\n                                                }]\n                                            })(\n                                                // <TimePicker onChange={this.durationOnChange} defaultOpenValue={moment('00:00:00', 'HH:mm:ss')} style={{width:\"100%\"}} size=\"large\"/>\n                                                <Select size=\"large\" onChange={this.onChangeDuration}>\n                                                    <Option value=\"30min\">30min</Option>\n                                                    <Option value=\"1hr\">1hr</Option>\n                                                    <Option value=\"1hr30min\">1hr 30min</Option>\n                                                    <Option value=\"2hr\">2hr</Option>\n                                                    <Option value=\"2hr30min\">2hr 30min</Option>\n                                                    <Option value=\"3hr\">3hr</Option>\n                                                    <Option value=\"3hr30min\">3hr 30min</Option>\n                                                    <Option value=\"4hr\">4hr</Option>\n                                                    <Option value=\"4hr30min\">4hr 30min</Option>\n                                                    <Option value=\"5hr\">5hr</Option>\n                                                    <Option value=\"5hr30min\">5hr 30min</Option>\n                                                    <Option value=\"6hr\">6hr</Option>\n                                                    <Option value=\"6hr30min\">6hr 30min</Option>\n                                                    <Option value=\"7hr\">7hr</Option>\n                                                    <Option value=\"7hr30min\">7hr 30min</Option>\n                                                    <Option value=\"8hr\">8hr</Option>\n                                                </Select>\n                                            )}\n                                        </FormItem>\n                                    </Col>\n                                    <Col span={7}>\n                                    </Col>\n                                </Row>\n                                <Row type=\"flex\" justify=\"space-around\" style={{textAlign:\"left\"}}>\n                                    <Col span={23}>\n                                        <FormItem\n                                            label=\"Meeting location of Tour (네이버의 영어주소를 이용하면 편리)\"\n                                        >\n                                            {getFieldDecorator('meetingLocation', {\n                                                rules: [{\n                                                    required: true, message: 'Please input meeting location of your tour!'\n                                                }]\n                                            })(\n                                                <Input size=\"large\" placeholder=\"Ex) exit 3, Dongmyo station, 1, Wangsan-ro, Dongdaemun-gu, Seoul\" />\n                                            )}\n                                        </FormItem>\n                                    </Col>\n                                </Row>\n                                <Row type=\"flex\" justify=\"space-around\" style={{textAlign:\"left\"}}>\n                                    <Col span={23}>\n                                        <label><span style={{color:'red',fontSize:18}}>*  </span>Meeting Point</label>\n                                        <Newgooglemap getMeetingPoint={this.getMeetingPoint}/>\n                                    </Col>\n                                </Row>\n                                <Row type=\"flex\" justify=\"space-around\" style={{textAlign:\"left\", marginTop:30}}>\n                                    <Col span={23}>\n                                        <FormItem\n                                            label=\"Please describe directions and explain how to get there\"\n                                        >\n                                            {getFieldDecorator('howgetthere', {\n                                                rules: [{\n                                                    required: true, message: 'Please input how to get there!'\n                                                }]\n                                            })(\n                                                <TextArea autosize={{ minRows: 2, maxRows: 3 }} placeholder=\"If you come out of exit 3 of Dongmyo station, you can find me\" />\n                                            )}                                          \n                                        </FormItem>\n                                    </Col>\n                                </Row>\n\n                                {/* 3. Price & Other Information */}\n                                <Row type=\"flex\" justify=\"start\" style={{marginTop:30,marginBottom:20}}>\n                                    <span style={{fontSize:\"1.5em\"}}>3. Price & Other Information</span>\n                                </Row>\n                                <Row type=\"flex\" justify=\"space-around\" style={{textAlign:\"left\"}}>\n                                    <Col span={5}>\n                                        <FormItem\n                                            label=\"Price of tour\"\n                                        >\n                                            {getFieldDecorator('price', {\n                                                rules: [{\n                                                    required: true, message: 'Please input price!'\n                                                }, {\n                                                    type: 'integer', message: 'Must be of type integer!'\n                                                }]\n                                            })(\n                                                <InputNumber \n                                                    size=\"large\" \n                                                    min={0} \n                                                    max={100000000}\n                                                    formatter={value => `₩ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                                    parser={value => value.replace(/\\₩\\s?|(,*)/g, '')}\n                                                    onChange={this.priceChange} \n                                                    style={{width:\"100%\"}} \n                                                    placeholder=\"Ex) 30000(단위생략)\" \n                                                />\n                                            )}\n                                        </FormItem>\n                                    </Col>\n                                    <Col span={17}>\n                                        <FormItem\n                                            label=\"Price included (비용에 포함된 식사, 여행지, 체험등을 간략히 작성)\"\n                                        >\n                                            {getFieldDecorator('priceIncluded', {\n                                                rules: [{\n                                                    required: true, message: 'Please input what is include in price!'\n                                                }]\n                                            })(\n                                                <Input size=\"large\" placeholder=\"Ex) lunch, snacks in the traditional market, rental fee to bicycle\" />\n                                            )}\n                                        </FormItem>\n                                    </Col>\n                                </Row>\n                                <Row type=\"flex\" justify=\"space-around\" style={{textAlign:\"left\"}}>\n                                    <Col span={5}>\n                                        <FormItem\n                                            label=\"Minimum Number of guest\"\n                                        >\n                                            {getFieldDecorator('minNumGuest', {\n                                                rules: [{\n                                                    required: true, message: 'Please input minimum number of guest!'\n                                                }, {\n                                                    type: 'integer', message: 'Please input number!'\n                                                }]\n                                            })(\n                                                <InputNumber size=\"large\" min={1} max={10} onChange={numGuestonChange} style={{width:\"100%\"}} />\n                                            )}\n                                        </FormItem>\n                                    </Col>\n                                    <Col span={5}>\n                                        <FormItem\n                                            label=\"Maximum Number of guest\"\n                                        >\n                                            {getFieldDecorator('maxNumGuest', {\n                                                rules: [{\n                                                    required: true, message: 'Please input maximum number of guest!'\n                                                }, , {\n                                                    type: 'integer', message: 'Please input number!'\n                                                }]\n                                            })(\n                                                <InputNumber size=\"large\" min={1} max={10} onChange={numGuestonChange} style={{width:\"100%\"}} />\n                                            )}\n                                        </FormItem>\n                                    </Col>\n                                    <Col span={11}>\n                                        <FormItem\n                                            label=\"Booking period(예약이 가능한 날짜범위 설정)\"\n                                        >\n                                            {getFieldDecorator('bookingPeriod', {\n                                                rules: [{\n                                                    required: true, message: 'Please select booking period!'\n                                                }]\n                                            })(\n                                                <Select size=\"large\" onChange={onChangeBookingPeriod}>\n                                                    <Option value=\"all\">All days including the day</Option>\n                                                    <Option value=\"exclude_first\">All days except the day</Option>\n                                                    <Option value=\"exclude_first_next\">All days except the day and the day before</Option>\n                                                </Select>\n                                            )}\n                                        </FormItem>\n                                    </Col>\n                                </Row>\n                                <Row type=\"flex\" justify=\"space-around\" style={{textAlign:\"left\"}}>\n                                    <Col span={9}>\n                                        <FormItem\n                                            label=\"Season from (투어 운영기간)\"\n                                        >\n                                            {getFieldDecorator('season', {\n                                                rules: [{\n                                                    required: true, message: 'Please input season of your tour!'\n                                                }]\n                                            })(\n                                                <RangePicker name=\"avaliable\" size=\"large\" onChange={this.seasonOnChange} />\n                                            )}\n                                        </FormItem>\n                                    </Col>\n                                    <Col span={13}>\n                                        <FormItem\n                                            label=\"Date not allowed\"\n                                        >\n                                            {getFieldDecorator('notAllowed', {\n                                                \n                                            })(\n                                                // <DatePicker \n                                                //     ref={notallowed => this.notallowed = notallowed}\n                                                //     size=\"large\" \n                                                //     onChange={this.onChangeNotAllowed} />\n                                                <div>\n                                                <textarea\n                                                    style={{width:300}}\n                                                    onClick={this.onClickTextarea}\n                                                    value={this.state.textareaDays}\n                                                    readOnly\n                                                />\n\n                                                <div className={this.state.pickerClassName}>\n                                                    <DayPicker\n                                                        selectedDays={this.state.selectedDays}\n                                                        onDayClick={this.handleDayClick}\n                                                    />\n                                                </div>\n                                                </div>\n                                            )}\n                                        </FormItem>\n                                    </Col>\n                                </Row>\n                                <Row type=\"flex\" justify=\"space-around\" style={{textAlign:\"left\"}}>\n                                    <Col span={23}>\n                                        <FormItem\n                                            label=\"Please write any additional information for your guest\"\n                                        >\n                                            {getFieldDecorator('addNote', {\n                                                rules: [{\n                                                    required: true, message: 'Please input any additional information for your guest!'\n                                                }]\n                                            })(\n                                                <TextArea autosize={{ minRows: 3, maxRows: 4 }} />\n                                            )}\n                                        </FormItem>\n                                    </Col>\n                                </Row>\n                            </div>\n                            <Row type=\"flex\" justify=\"center\" style={{marginTop:20}}> \n                                <Col span={5}>\n                                <Spin spinning={this.state.loading} size=\"large\">\n                                    <Button name=\"completeBtn\" htmlType=\"submit\" size=\"large\" type=\"primary\" block style={{height:60}}><span style={{fontSize:\"1.5em\"}}>완 료</span></Button>\n                                </Spin>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\nconst WrappedCreateProductForm = Form.create()(CreateProductForm);\n\nexport default class extends React.Component {\n    render(){\n        return(\n            <div>\n                <Header selected=\"createproduct\" />                \n                <WrappedCreateProductForm/>\n                <Footer selected=\"createproduct\" />\n            </div>\n        )\n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAmCA;AAEA;AADA;AAKA;AADA;AAGA;AACA;AA5CA;AA8CA;AACA;AADA;AAGA;AACA;AAlDA;AAoDA;AAEA;AADA;AAKA;AAAA;AAAA;AADA;AAGA;AACA;AA7DA;AA8DA;AAEA;AADA;AAKA;AAAA;AAAA;AADA;AAGA;AACA;AAvEA;AAyEA;AACA;AADA;AACA;AAEA;AACA;AACA;AA9EA;AA+FA;AACA;AACA;AAjGA;AAmGA;AACA;AACA;AArGA;AAuGA;AACA;AAAA;AACA;AADA;AAGA;AACA;AA5GA;AA8GA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAnHA;AAqHA;AACA;AADA;AACA;AAEA;AACA;AACA;AA1HA;AA4HA;AACA;AADA;AACA;AAEA;AACA;AACA;AAjIA;AA0IA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAHA;AAaA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAtMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AAjBA;AAkBA;AACA;;;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;AAyaatqBA;AACA;AAuqBA;AACA;;;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AATA;AACA;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}