{"version":3,"file":"static/webpack/static\\development\\pages\\newmulti.js.6d1f260980fa1a7f8b2f.hot-update.js","sources":["webpack:///./node_modules/react-day-picker/lib/src/addons/MomentLocaleUtils.js","webpack:///./node_modules/react-day-picker/moment.js","webpack:///./pages/newmulti.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatDay = formatDay;\nexports.formatMonthTitle = formatMonthTitle;\nexports.formatWeekdayShort = formatWeekdayShort;\nexports.formatWeekdayLong = formatWeekdayLong;\nexports.getFirstDayOfWeek = getFirstDayOfWeek;\nexports.getMonths = getMonths;\nexports.formatDate = formatDate;\nexports.parseDate = parseDate;\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction formatDay(day) {\n  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en';\n\n  return (0, _moment2.default)(day).locale(locale).format('ddd ll');\n} /* eslint-disable import/no-extraneous-dependencies, no-underscore-dangle */\n\nfunction formatMonthTitle(date) {\n  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en';\n\n  return (0, _moment2.default)(date).locale(locale).format('MMMM YYYY');\n}\n\nfunction formatWeekdayShort(day) {\n  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en';\n\n  return (0, _moment2.default)().locale(locale)._locale.weekdaysMin()[day];\n}\n\nfunction formatWeekdayLong(day) {\n  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en';\n\n  return (0, _moment2.default)().locale(locale)._locale.weekdays()[day];\n}\n\nfunction getFirstDayOfWeek() {\n  var locale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'en';\n\n  var localeData = _moment2.default.localeData(locale);\n  return localeData.firstDayOfWeek();\n}\n\nfunction getMonths() {\n  var locale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'en';\n\n  var months = [];\n  var i = 0;\n  while (i < 12) {\n    months.push((0, _moment2.default)().locale(locale).month(i).format('MMMM'));\n    i += 1;\n  }\n  return months;\n}\n\nfunction formatDate(date) {\n  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'L';\n  var locale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'en';\n\n  return (0, _moment2.default)(date).locale(locale).format(Array.isArray(format) ? format[0] : format);\n}\n\nfunction parseDate(str) {\n  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'L';\n  var locale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'en';\n\n  var m = (0, _moment2.default)(str, format, locale, true);\n  if (m.isValid()) {\n    return m.toDate();\n  }\n  return undefined;\n}\n\nexports.default = {\n  formatDay: formatDay,\n  formatMonthTitle: formatMonthTitle,\n  formatWeekdayShort: formatWeekdayShort,\n  formatWeekdayLong: formatWeekdayLong,\n  getFirstDayOfWeek: getFirstDayOfWeek,\n  getMonths: getMonths,\n  formatDate: formatDate,\n  parseDate: parseDate\n};\n//# sourceMappingURL=MomentLocaleUtils.js.map","/* eslint-env node */\n\nmodule.exports = require('./lib/src/addons/MomentLocaleUtils');\nmodule.exports.localeUtils = require('./lib/src/addons/MomentLocaleUtils');\n","import React from 'react';\r\nimport DayPicker, { DateUtils } from 'react-day-picker';\r\nimport {formatDate,parseDate,} from 'react-day-picker/moment';\r\nimport 'react-day-picker/lib/style.css';\r\n\r\nexport default class Example extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDayClick = this.handleDayClick.bind(this);\r\n    this.state = {\r\n      selectedDays: [],\r\n    };\r\n  }\r\n  handleDayClick(day, { selected }) {\r\n    const { selectedDays } = this.state;\r\n    if (selected) {\r\n        const selectedIndex = selectedDays.findIndex(selectedDay =>\r\n            DateUtils.isSameDay(selectedDay, day)\r\n        );\r\n        selectedDays.splice(selectedIndex, 1);\r\n    } else {\r\n        console.log(day.toISOString())\r\n        selectedDays.push(day);\r\n    }\r\n    this.setState({ selectedDays });\r\n    console.log(this.state.selectedDays)\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <textarea\r\n            style={{width:300}}\r\n            onClick={this.onClickTextarea}\r\n            value={this.state.selectedDays}\r\n            readOnly\r\n        >\r\n\r\n        </textarea>\r\n        <DayPicker\r\n            format=\"M/D/YYYY\"\r\n            formatDate={formatDate}\r\n            parseDate={parseDate}\r\n            selectedDays={this.state.selectedDays}\r\n            onDayClick={this.handleDayClick}\r\n        />\r\n        <p>hahaha</p>\r\n      </div>\r\n    );\r\n  }\r\n}"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC3FA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AADA;AAHA;AAMA;AACA;;;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA3CA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}