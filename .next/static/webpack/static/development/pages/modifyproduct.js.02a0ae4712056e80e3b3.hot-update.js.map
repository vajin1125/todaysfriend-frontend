{"version":3,"file":"static/webpack/static\\development\\pages\\modifyproduct.js.02a0ae4712056e80e3b3.hot-update.js","sources":["webpack:///./pages/modifyproduct.js"],"sourcesContent":["import { Row, Col, Form, Input, Select, TimePicker, InputNumber, DatePicker, AutoComplete, Button, Modal, Spin } from 'antd'\r\nimport axios from 'axios'\r\nimport Router from 'next/router'\r\nimport Link from 'next/link'\r\nimport moment from 'moment';\r\nimport { base_url } from './components/base_url'\r\nimport { Header } from './components/Header'\r\nimport { Footer } from './components/Footer'\r\nimport { ModifyTourImage } from './components/ModifyTourImage'\r\nimport Newgooglemap from './components/Newgooglemap'\r\nimport Googlemap from './components/Googlemap'\r\nimport { createproduct_top_banner } from './components/images'\r\nimport { language_list } from './components/language_list'\r\nimport '../static/css/createproduct.css'\r\n\r\nimport DayPicker, { DateUtils } from 'react-day-picker';\r\nimport 'react-day-picker/lib/style.css';\r\nimport '../static/css/mypicker.css'\r\n\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst { RangePicker } = DatePicker;\r\nconst dateFormat = 'YYYY-MM-DD';\r\nconst { TextArea } = Input;\r\nlet for_modify_id;\r\n\r\nconst languageOption = language_list.map((language) => \r\n    <Option key={language.name.toString()} value={language.name}>{language.name}</Option>\r\n)\r\n\r\n// Type of tour Select\r\nfunction tourTypeChange(value) {\r\n    console.log(`selected ${value}`);\r\n}\r\n\r\n// city select\r\nfunction cityChange(value) {\r\n    console.log(`selected ${value}`);\r\n}\r\n\r\nfunction languageChange(value) {\r\n    console.log(`selected ${value}`);\r\n}\r\n\r\n// Number of Guest\r\nfunction numGuestonChange(value) {\r\n    console.log('changed', value);\r\n}\r\n\r\n// Price of tour\r\nfunction priceChange(value) {\r\n    console.log('changed', value);\r\n}\r\n\r\n\r\nclass ModifyProductForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filterdata: [],\r\n            seasondate: [],\r\n            notAllowedDate: '',\r\n            uploadedFiles: [],\r\n            loading: false,\r\n            // for modify data\r\n            productData: [],\r\n            productImgData: [],\r\n            language: [],\r\n            meetingpoint: '',\r\n            meetingpointJson: {\r\n                lat: 0,\r\n                lng: 0\r\n            },\r\n            selectedDays: [],\r\n            textareaDays: [],\r\n            pickerClassName: 'myPickerHide'\r\n        }\r\n        this.handleDayClick = this.handleDayClick.bind(this);\r\n    }\r\n\r\n    handleDayClick(day, { selected }) {\r\n        const { selectedDays, textareaDays } = this.state;\r\n        if (selected) {\r\n            const selectedIndex = selectedDays.findIndex(selectedDay =>\r\n                DateUtils.isSameDay(selectedDay, day)\r\n            );\r\n            selectedDays.splice(selectedIndex, 1);\r\n            textareaDays.splice(selectedIndex, 1);\r\n        } else {\r\n            selectedDays.push(day);\r\n            console.log(day.toISOString())\r\n            const newday = day.toISOString().split('T')[0]\r\n            textareaDays.push(newday)\r\n        }\r\n        this.setState({ \r\n            selectedDays,\r\n            textareaDays\r\n        });\r\n        console.log(this.state.selectedDays)\r\n    }\r\n\r\n    onClickTextarea = () => {\r\n        this.state.pickerClassName === 'myPickerHide' ?\r\n        this.setState({\r\n            pickerClassName: 'myPickerShow'\r\n        })\r\n        :\r\n        this.setState({\r\n            pickerClassName: 'myPickerHide'\r\n        })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const surl = window.location.href\r\n        const spl_url = surl.split(\"=\")\r\n        if (spl_url.length > 0) {\r\n            for_modify_id = spl_url[1]\r\n            console.log(\"nano:\",for_modify_id)\r\n        }\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: base_url + \"/api/get_modify_product\",\r\n            data: {\r\n                productId: for_modify_id\r\n            }\r\n        })\r\n        .then((response) => {\r\n            console.log(response)\r\n            if (response.status === 200) {\r\n                this.setState({\r\n                    productData: response.data[0],\r\n                    productImgData: response.data[1],\r\n                    textareaDays: response.data[0]['pdu_unavailable_date']\r\n                })\r\n                this.setState({\r\n                    meetingpointJson: {\r\n                        lat: parseFloat(response.data[0].pdu_meeting_point_lat),\r\n                        lng: parseFloat(response.data[0].pdu_meeting_point_lng)\r\n                    }\r\n                })\r\n                const notDaysArray = response.data[0]['pdu_unavailable_date'].split(\",\")\r\n                this.setState({\r\n                    textareaDays: notDaysArray\r\n                })\r\n                const array = []\r\n                notDaysArray.forEach(day => {\r\n                    const sp_day = day.split(\"-\")\r\n                    array.push(new Date(sp_day[0], parseInt(sp_day[1])-1, sp_day[2]))\r\n                });\r\n                \r\n                this.setState({\r\n                    selectedDays: array\r\n                })\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n\r\n    }\r\n    \r\n    autocompleteCountry = (value) => {\r\n        if (value == '')\r\n            this.setState({\r\n                filterdata: []\r\n            })\r\n        else\r\n            this.setState({\r\n                filterdata: countries.filter((s) => s.toLowerCase().substring(0, value.length) === value.toLowerCase())\r\n            })\r\n    }\r\n    autocompleteLanguage = (value) => {\r\n        if (value == '')\r\n            this.setState({\r\n                filterdata: []\r\n            })\r\n        else\r\n            this.setState({\r\n                filterdata: languages.filter((s) => s.toLowerCase().substring(0, value.length) === value.toLowerCase())\r\n            })\r\n    }\r\n\r\n    getDuration = () => {\r\n        console.log(\"Duration:\",this.duration.value)\r\n    }\r\n\r\n    tournameOnChange = (e) => {\r\n        this.setState({\r\n            tourname: e.target.value\r\n        })\r\n        console.log(this.state.tourname)\r\n    }\r\n\r\n    // meetingTimeOnChange = (time, timeString) => {\r\n    //     console.log(\"meeting Time:\", timeString)\r\n    //     this.setState({\r\n    //         meetingtime: timeString\r\n    //     })\r\n    // }\r\n\r\n    // durationOnChange = (time, timeString) => {\r\n    //     console.log(\"Duration Hours:\", timeString)\r\n    //     this.setState({\r\n    //         durationhours: timeString\r\n    //     })\r\n    // }\r\n\r\n    // meeting Time Select\r\n    onChangeMeetingTime = (value) => {\r\n        console.log(`selected ${value}`);\r\n    }\r\n    // duration Select\r\n    onChangeDuration = (value) => {\r\n        console.log(`selected ${value}`);\r\n    }\r\n\r\n    seasonOnChange = (date, dateString) => {\r\n        console.log(\"season date form ~ to\", dateString)\r\n        this.setState({\r\n            seasondate: dateString\r\n        })\r\n    }\r\n\r\n    onChangeNotAllowed = (date, dateString) => {\r\n        console.log(\"Not allowed Date:\", dateString)\r\n        this.setState({\r\n            notAllowedDate: dateString\r\n        })\r\n    }\r\n\r\n    getUploadFiles = (data) =>  {\r\n        this.setState({\r\n            uploadedFiles: data\r\n        })\r\n        console.log(\"Uploaded File list:\", this.state.uploadedFiles)\r\n    }\r\n\r\n    getMeetingPoint = (point) => {\r\n        // this.setState({\r\n        //     meetingpoint: point\r\n        // })\r\n        const points = point.split(',')\r\n        this.setState({\r\n            meetingpointJson: {\r\n                lat: parseFloat(points[0]),\r\n                lng: parseFloat(points[1])\r\n            }\r\n        })\r\n        console.log(\"MeetingPointJSON:\", this.state.meetingpointJson)\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                this.setState({\r\n                    loading: true\r\n                })\r\n                // const meetingtime = this.meetingtime.state.value.format(\"HH:mm:ss\")\r\n                // const durationhours = this.duration.state.value.format(\"HH:mm:ss\")\r\n                const seasondate_from = this.season.picker.state.value[0].format(\"YYYY-MM-DD\")\r\n                const seasondate_to = this.season.picker.state.value[1].format(\"YYYY-MM-DD\")\r\n                const notAllowedDate = this.state.textareaDays\r\n                const uploadedFiles = this.state.uploadedFiles\r\n                const ustr = this.state.productData.pdu_ustr\r\n                const meetingpoint = this.state.meetingpoint\r\n                console.log('uploaded Files: ', uploadedFiles);\r\n                console.log('Received values of form: ', values);\r\n                console.log(\"logged in username:\", sessionStorage.getItem('session_username'))\r\n                const username = sessionStorage.getItem('session_username')\r\n\r\n                this.refs.UploadingTourImage.handleUpload();\r\n\r\n                axios({\r\n                    method: 'post',\r\n                    url: base_url + '/api/modify_product',\r\n                    data: {\r\n                        values, \r\n                        seasondate_from,\r\n                        seasondate_to,\r\n                        notAllowedDate,\r\n                        uploadedFiles,\r\n                        username,\r\n                        ustr,\r\n                        for_modify_id,\r\n                        meetingpoint\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    console.log('response:', response);\r\n                    if (response.data['type'] === 'success'){\r\n                        Router.push(\"/successproduct\")\r\n                    } else {\r\n                        this.setState({\r\n                            loading: false\r\n                        })\r\n                        Modal.error({\r\n                            title: 'Product registeration has been failed!',\r\n                            content: 'Please try again !',\r\n                        });\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.log('error:', error);\r\n                    this.setState({\r\n                        loading: false\r\n                    })\r\n                    Modal.error({\r\n                        title: 'Product registeration has been failed!',\r\n                        content: 'Please try again !',\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    makeLanguageArray = () => {\r\n        let langarray = []\r\n        if (this.state.productData.length != 0) {\r\n            let lang = this.state.productData.pdu_language.split(',')\r\n            langarray = [...lang]\r\n        }\r\n        return langarray        \r\n    }\r\n    \r\n    makeSeasonArray = () => {\r\n        let seasonarray = []\r\n        if (this.state.productData.length != 0) {\r\n            let fromdate = this.state.productData.pdu_season_from\r\n            let todate = this.state.productData.pdu_season_to\r\n            seasonarray = [...fromdate]\r\n            seasonarray = [...todate]\r\n        }\r\n        return seasonarray \r\n    }\r\n\r\n    // onFinish = () => {\r\n    //     // console.log(\"OnFinish-meetingtime:\", this.meetingtime.state.value.format(\"HH:mm:ss\"))\r\n    //     // console.log(\"OnFinish-duration:\", this.duration.state.value.format(\"HH:mm:ss\"))\r\n    //     console.log(\"OnFinsh-notallowed:\", this.notallowed.picker.state.value.format(\"YYYY-MM-DD\"))      \r\n    //     console.log(\"OnFinish-seasonfrom\", this.season.picker.state.value[0].format(\"YYYY-MM-DD\"))\r\n    //     console.log(\"OnFinish-seasonto\", this.season.picker.state.value[1].format(\"YYYY-MM-DD\"))\r\n    // }\r\n    \r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const { productData, productImgData } = this.state;\r\n        console.log(\"tourname:\", productData.pdu_season_from)\r\n\r\n        return(\r\n            <div>\r\n                <Row>\r\n                    <Col span={24} style={{height:'20vw',position:'relative'}}>\r\n                        <img src={createproduct_top_banner} alt='createproduct_top_banner' style={{width:'100%',position:'absolute',left:0,bottom:0}}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row type=\"flex\" justify=\"center\" style={{marginTop:30}}>\r\n                    <h1>Modify a Product</h1>\r\n                </Row>\r\n                <Row type=\"flex\" justify=\"center\">\r\n                    <Col span={12}>\r\n                        <p>\r\n                            모든 내용은 영어 또는 가이드가 진행될 외국어로 작성해주셔야 합니다. 작성된 상품은 '오늘의 친구'에서 검토 후 수정 요청 또는 상품등록을 진행할 예정입니다. 상품에 대한 검증이 필요할 경우 '오늘의 친구'매니저가 입력된 연락처로 안내를 드린 후, 투어일정을 함께 체험하여 컨설팅을 진행할 예정이며 그 이후 상품등록을 진행합니다. 상품검증시 발생하는 비용을 '오늘의 친구'에서 지불 상품의 질을 높이고 투어상품 개발자의 편의를 돕고자 상품게시까지 일정 시간이 소요될수 있음을 참고해주시기 바랍니다!\r\n                        </p>\r\n                    </Col>\r\n                </Row>\r\n                <Row type=\"flex\" justify=\"center\">\r\n                    <Col span={12}>\r\n                        \r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <div style={{textAlign:\"center\",border:\"1px solid rgba(0, 0, 0, 0.2)\",borderRadius:10,padding:\"20px 20px\",width:\"100%\",margin:\"0 auto\"}}>\r\n                                <Row type=\"flex\" justify=\"end\">\r\n                                    <span style={{color:\"red\",fontSize:\".8em\"}}>*영어로 작성해 주세요</span>\r\n                                </Row>\r\n\r\n                                {/* 1. Basic Information */}\r\n                                <Row type=\"flex\" justify=\"start\" style={{marginBottom:20}}>\r\n                                    <span style={{fontSize:\"1.5em\"}}>1. Basic Information</span>\r\n                                </Row>\r\n                                <Row type=\"flex\" justify=\"space-around\" style={{textAlign:\"left\"}}>\r\n                                    <Col span={7}>\r\n                                        <FormItem\r\n                                            label=\"Name of tour\"\r\n                                        >\r\n                                            {getFieldDecorator('tourname', {\r\n                                                initialValue: productData.pdu_name,\r\n                                                rules: [{\r\n                                                    type: 'string', message: 'The input is not valid tour name!',\r\n                                                }, {\r\n                                                    required: true, message: 'Please input your tour name!',\r\n                                                }],\r\n                                            })(\r\n                                                <Input size=\"large\" onChange={this.tournameOnChange} />\r\n                                            )}\r\n                                        </FormItem>\r\n                                    </Col>\r\n                                    <Col span={7}>\r\n                                        <FormItem\r\n                                            label=\"Type of tour\"\r\n                                        >\r\n                                            {getFieldDecorator('tourtype', {\r\n                                                initialValue: productData.pdu_type,\r\n                                                rules: [{\r\n                                                    required: true, message: 'Please select your tour type!'\r\n                                                }]\r\n                                            })(\r\n                                                <Select size=\"large\" onChange={tourTypeChange}>\r\n                                                    <Option value=\"Night Tour\">Night Tour</Option>\r\n                                                    <Option value=\"Private Car Tour\">Private Car Tour</Option>\r\n                                                    <Option value=\"Food Tour\">Food Tour</Option>\r\n                                                    <Option value=\"Climbing Tour\">Climbing Tour</Option>\r\n                                                    <Option value=\"Walking Tour\">Walking Tour</Option>\r\n                                                    <Option value=\"Bicycle Tour\">Bicycle Tour</Option>\r\n                                                    <Option value=\"Market Tour\">Market Tour</Option>\r\n                                                    <Option value=\"Nature Tour\">Nature Tour</Option>\r\n                                                    <Option value=\"Other\">Other</Option>\r\n                                                </Select>\r\n                                            )}\r\n                                        </FormItem>\r\n                                    </Col>\r\n                                    <Col span={7}>\r\n                                        <FormItem\r\n                                            label=\"Country\"\r\n                                        >\r\n                                            {getFieldDecorator('country', {\r\n                                                initialValue: productData.pdu_country,\r\n                                                rules: [{\r\n                                                    required: true, message: 'Please input your country!'\r\n                                                }]\r\n                                            })(\r\n                                                <Input size=\"large\" />\r\n                                            )}\r\n                                        </FormItem>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row type=\"flex\" justify=\"space-around\" style={{textAlign:\"left\"}}>\r\n                                    <Col span={7}>\r\n                                        <FormItem\r\n                                            label=\"City\"\r\n                                        >\r\n                                            {getFieldDecorator('city', {\r\n                                                initialValue: productData.pdu_city,\r\n                                                rules: [{\r\n                                                    required: true, message: 'Please select your tour city!'\r\n                                                }]\r\n                                            })(\r\n                                                <Select name=\"city\" size=\"large\" onChange={cityChange}>\r\n                                                    <Option value=\"seoul\">Seoul</Option>\r\n                                                    <Option value=\"busan\">Busan</Option>\r\n                                                    <Option value=\"gyeongju\">Gyeongju</Option>\r\n                                                    <Option value=\"jeonju\">Jeonju</Option>\r\n                                                    <Option value=\"jejuisland\">Jejuisland</Option>\r\n                                                    <Option value=\"daegu\">Daegu</Option>\r\n                                                    <Option value=\"others\">Others</Option>\r\n                                                </Select>\r\n                                            )}\r\n                                        </FormItem>\r\n                                    </Col>\r\n                                    <Col span={15}>\r\n                                        <FormItem\r\n                                            label=\"Language(3개국어까지 입력가능)\"\r\n                                        >\r\n                                            {getFieldDecorator('language', {\r\n                                                initialValue: this.makeLanguageArray(),\r\n                                                rules: [{\r\n                                                    required: true, message: 'Please input languages!'\r\n                                                }, {\r\n                                                    type: 'array',\r\n                                                }]\r\n                                            })(\r\n                                                <Select\r\n                                                    mode=\"multiple\"\r\n                                                    style={{ width: '100%' }}\r\n                                                    placeholder=\"Please select languages\"\r\n                                                    onChange={languageChange}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                    {languageOption}\r\n                                                </Select>\r\n                                            )}\r\n                                        </FormItem>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row type=\"flex\" justify=\"space-around\" style={{textAlign:\"left\"}}>\r\n                                    <Col span={23}>\r\n                                        <FormItem\r\n                                            label=\"Brief description of Tour\"\r\n                                        >\r\n                                            {getFieldDecorator('briefDesc', {\r\n                                                initialValue: productData.pdu_brief_description,\r\n                                                rules: [{\r\n                                                    required: true, message: 'Please input your brief desciption of your tour!'\r\n                                                }]\r\n                                            })(\r\n                                                <TextArea autosize={{ minRows: 3, maxRows: 8 }} placeholder=\"간단하게 당신의 상품특징에 대해 설명해주세요.\" />\r\n                                            )}\r\n                                        </FormItem>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row type=\"flex\" justify=\"space-around\" style={{textAlign:\"left\"}}>\r\n                                    <Col span={23}>\r\n                                        <FormItem\r\n                                            label=\"Detailed description of Tour\"\r\n                                        >\r\n                                            {getFieldDecorator('detailedDesc', {\r\n                                                initialValue: productData.pdu_detailed_description,\r\n                                                rules: [{\r\n                                                    required: true, message: 'Please input your detail desciption of your tour!'\r\n                                                }]\r\n                                            })(\r\n                                                <TextArea autosize={{ minRows: 6, maxRows: 10 }} placeholder=\"당신이 만든 local여행에 대해 설명을 자유롭게 작성해주세요. Tip! 당신의 투어만이 가지고 있는 특징에 대해 설명해주세요. 외국인은 언제나 local다움과 funny한 상품을 찾고 있습니다.\" />\r\n                                            )}\r\n                                        </FormItem>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row type=\"flex\" justify=\"space-around\" style={{textAlign:\"left\"}}>\r\n                                    <Col span={23}>\r\n                                        <FormItem\r\n                                            label=\"Hash Tag (당신의 여행이 가지고 있는 특징을 4개의 Hash Tag 로 보여주세요.)\"\r\n                                        >\r\n                                            {getFieldDecorator('hashtag', {\r\n                                                initialValue: productData.pdu_hashtag,\r\n                                                rules: [{\r\n                                                    required: true, message: 'Please input your hash tag of your tour!'\r\n                                                }]\r\n                                            })(\r\n                                                <Input size=\"large\" placeholder=\"Ex) #seoul #hiking #bicycle #picnic\" />\r\n                                            )}\r\n                                        </FormItem>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row type=\"flex\" justify=\"space-around\" style={{textAlign:\"left\"}}>\r\n                                    <Col span={23}>\r\n                                        <FormItem\r\n                                            label=\"Tour Image (투어를 대표하는 이미지를 넣어주세요.)\"\r\n                                        >\r\n                                            <ModifyTourImage uploadedFileList={productImgData} getUploadFileList={this.getUploadFiles} ref='UploadingTourImage' />\r\n                                        </FormItem>\r\n                                    </Col>\r\n                                </Row>\r\n                                \r\n                                {/* 2. Course Information */}\r\n                                <Row type=\"flex\" justify=\"start\" style={{marginTop:30,marginBottom:20}}>\r\n                                    <span style={{fontSize:\"1.5em\"}}>2. Course Information</span>\r\n                                </Row>\r\n                                <Row type=\"flex\" justify=\"space-around\" style={{textAlign:\"left\"}}>\r\n                                    <Col span={7}>\r\n                                        <FormItem\r\n                                            label=\"Meeting Time\"\r\n                                        >   \r\n                                            {getFieldDecorator('meetingTime', {\r\n                                                initialValue: productData.pdu_meeting_time,\r\n                                                rules: [{\r\n                                                    required: true, message: 'Please input meeting time!'\r\n                                                }]\r\n                                            })(\r\n                                                // <TimePicker ref={meetingtime => this.meetingtime = meetingtime} onChange={this.meetingTimeOnChange} defaultOpenValue={moment('00:00:00', 'HH:mm:ss')} style={{width:\"100%\"}} size=\"large\"/>\r\n                                                <Select size=\"large\" onChange={this.onChangeMeetingTime}>\r\n                                                    <Option value=\"09:00\">09:00</Option>\r\n                                                    <Option value=\"09:30\">09:30</Option>\r\n                                                    <Option value=\"10:00\">10:00</Option>\r\n                                                    <Option value=\"10:30\">10:30</Option>\r\n                                                    <Option value=\"11:00\">11:00</Option>\r\n                                                    <Option value=\"11:30\">11:30</Option>\r\n                                                    <Option value=\"12:00\">12:00</Option>\r\n                                                    <Option value=\"12:30\">12:30</Option>\r\n                                                    <Option value=\"13:00\">13:00</Option>\r\n                                                    <Option value=\"13:30\">13:30</Option>\r\n                                                    <Option value=\"14:00\">14:00</Option>\r\n                                                    <Option value=\"14:30\">14:30</Option>\r\n                                                    <Option value=\"15:00\">15:00</Option>\r\n                                                    <Option value=\"15:30\">15:30</Option>\r\n                                                    <Option value=\"16:00\">16:00</Option>\r\n                                                    <Option value=\"16:30\">16:30</Option>\r\n                                                    <Option value=\"17:00\">17:00</Option>\r\n                                                    <Option value=\"18:30\">18:30</Option>\r\n                                                    <Option value=\"19:00\">19:00</Option>\r\n                                                    <Option value=\"19:30\">19:30</Option>\r\n                                                    <Option value=\"20:00\">20:00</Option>\r\n                                                </Select>\r\n                                            )}\r\n                                        </FormItem>\r\n                                    </Col>\r\n                                    <Col span={7}>\r\n                                        <FormItem\r\n                                            label=\"Duration (투어 소요시간)\"\r\n                                        >\r\n                                            {getFieldDecorator('duration', {\r\n                                                // initialValue: moment(productData.pdu_duration, 'HH:mm:ss'),\r\n                                                initialValue: productData.pdu_duration,\r\n                                                rules: [{\r\n                                                    required: true, message: 'Please input duration of your tour!'\r\n                                                }]\r\n                                            })(\r\n                                                // <TimePicker ref={duration => this.duration = duration} onChange={this.durationOnChange} defaultOpenValue={moment('00:00:00', 'HH:mm:ss')} style={{width:\"100%\"}} size=\"large\"/>\r\n                                                <Select size=\"large\" onChange={this.onChangeDuration}>\r\n                                                    <Option value=\"30min\">30min</Option>\r\n                                                    <Option value=\"1hr\">1hr</Option>\r\n                                                    <Option value=\"1hr30min\">1hr 30min</Option>\r\n                                                    <Option value=\"2hr\">2hr</Option>\r\n                                                    <Option value=\"2hr30min\">2hr 30min</Option>\r\n                                                    <Option value=\"3hr\">3hr</Option>\r\n                                                    <Option value=\"3hr30min\">3hr 30min</Option>\r\n                                                    <Option value=\"4hr\">4hr</Option>\r\n                                                    <Option value=\"4hr30min\">4hr 30min</Option>\r\n                                                    <Option value=\"5hr\">5hr</Option>\r\n                                                    <Option value=\"5hr30min\">5hr 30min</Option>\r\n                                                    <Option value=\"6hr\">6hr</Option>\r\n                                                    <Option value=\"6hr30min\">6hr 30min</Option>\r\n                                                    <Option value=\"7hr\">7hr</Option>\r\n                                                    <Option value=\"7hr30min\">7hr 30min</Option>\r\n                                                    <Option value=\"8hr\">8hr</Option>\r\n                                                </Select>\r\n                                            )}\r\n                                        </FormItem>\r\n                                    </Col>\r\n                                    <Col span={7}>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row type=\"flex\" justify=\"space-around\" style={{textAlign:\"left\"}}>\r\n                                    <Col span={23}>\r\n                                        <FormItem\r\n                                            label=\"Meeting location of Tour (네이버의 영어주소를 리용하면 편리)\"\r\n                                        >\r\n                                            {getFieldDecorator('meetingLocation', {\r\n                                                initialValue: productData.pdu_location,\r\n                                                rules: [{\r\n                                                    required: true, message: 'Please input meeting location of your tour!'\r\n                                                }]\r\n                                            })(\r\n                                                <Input size=\"large\" placeholder=\"Ex) exit 3, Dongmyo station, 1, Wangsan-ro, Dongdaemun-gu, Seoul\" />\r\n                                            )}\r\n                                        </FormItem>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row type=\"flex\" justify=\"space-around\" style={{textAlign:\"left\"}}>\r\n                                    <Col span={23}>\r\n                                    <label><span style={{color:'red',fontSize:18}}>*  </span>Meeting Point</label>\r\n                                        <Newgooglemap \r\n                                            getMeetingPoint={this.getMeetingPoint} \r\n                                            // lat={parseFloat(this.state.productData.pdu_meeting_point_lat)} \r\n                                            // lng={parseFloat(this.state.productData.pdu_meeting_point_lng)} \r\n                                            meetingpointJson={this.state.meetingpointJson}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row type=\"flex\" justify=\"space-around\" style={{textAlign:\"left\"}}>\r\n                                    <Col span={23}>\r\n                                        <FormItem\r\n                                            label=\"Please describe directions and explain how to get there\"\r\n                                        >\r\n                                            {getFieldDecorator('howgetthere', {\r\n                                                initialValue: productData.pdu_hottoget,\r\n                                                rules: [{\r\n                                                    required: true, message: 'Please input how to get there!'\r\n                                                }]\r\n                                            })(\r\n                                                <TextArea autosize={{ minRows: 2, maxRows: 3 }} placeholder=\"If you come out of exit 3 of Dongmyo station, you can find me\" />\r\n                                            )}                                          \r\n                                        </FormItem>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                {/* 3. Price & Other Information */}\r\n                                <Row type=\"flex\" justify=\"start\" style={{marginTop:30,marginBottom:20}}>\r\n                                    <span style={{fontSize:\"1.5em\"}}>3. Price & Other Information</span>\r\n                                </Row>\r\n                                <Row type=\"flex\" justify=\"space-around\" style={{textAlign:\"left\"}}>\r\n                                    <Col span={7}>\r\n                                        <FormItem\r\n                                            label=\"Price of tour\"\r\n                                        >\r\n                                            {getFieldDecorator('price', {\r\n                                                initialValue: productData.pdu_price,\r\n                                                rules: [{\r\n                                                    required: true, message: 'Please input price!'\r\n                                                }, {\r\n                                                    type: 'integer', message: 'Must be of type integer!'\r\n                                                }]\r\n                                            })(\r\n                                                <InputNumber \r\n                                                    size=\"large\" \r\n                                                    min={0} \r\n                                                    max={100000000} \r\n                                                    formatter={value => `₩ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                    parser={value => value.replace(/\\₩\\s?|(,*)/g, '')}\r\n                                                    onChange={this.priceChange} \r\n                                                    style={{width:\"100%\"}} \r\n                                                    placeholder=\"Ex) 30000(단위생략)\" />\r\n                                            )}\r\n                                        </FormItem>\r\n                                    </Col>\r\n                                    <Col span={15}>\r\n                                        <FormItem\r\n                                            label=\"Price included (비용에 포함된 식사, 여행지, 체험등을 간략히 작성)\"\r\n                                        >\r\n                                            {getFieldDecorator('priceIncluded', {\r\n                                                initialValue: productData.pdu_price_include,\r\n                                                rules: [{\r\n                                                    required: true, message: 'Please input what is include in price!'\r\n                                                }]\r\n                                            })(\r\n                                                <Input size=\"large\" placeholder=\"Ex) lunch, snacks in the traditional market, rental fee to bicycle\" />\r\n                                            )}\r\n                                        </FormItem>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row type=\"flex\" justify=\"space-around\" style={{textAlign:\"left\"}}>\r\n                                    <Col span={7}>\r\n                                        <FormItem\r\n                                            label=\"Minimum Number of guest\"\r\n                                        >\r\n                                            {getFieldDecorator('minNumGuest', {\r\n                                                initialValue: productData.pdu_min_guest,\r\n                                                rules: [{\r\n                                                    required: true, message: 'Please input minimum number of guest!'\r\n                                                }, {\r\n                                                    type: 'integer', message: 'Please input number!'\r\n                                                }]\r\n                                            })(\r\n                                                <InputNumber size=\"large\" min={1} max={1000} onChange={numGuestonChange} style={{width:\"100%\"}} />\r\n                                            )}\r\n                                        </FormItem>\r\n                                    </Col>\r\n                                    <Col span={7}>\r\n                                        <FormItem\r\n                                            label=\"Maximum Number of guest\"\r\n                                        >\r\n                                            {getFieldDecorator('maxNumGuest', {\r\n                                                initialValue: productData.pdu_max_guest,\r\n                                                rules: [{\r\n                                                    required: true, message: 'Please input maximum number of guest!'\r\n                                                }, , {\r\n                                                    type: 'integer', message: 'Please input number!'\r\n                                                }]\r\n                                            })(\r\n                                                <InputNumber size=\"large\" min={1} max={1000} onChange={numGuestonChange} style={{width:\"100%\"}} />\r\n                                            )}\r\n                                        </FormItem>\r\n                                    </Col>\r\n                                    <Col span={7}>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row type=\"flex\" justify=\"space-around\" style={{textAlign:\"left\"}}>\r\n                                    <Col span={9}>\r\n                                        <FormItem\r\n                                            label=\"Season from (투어 운영기간)\"\r\n                                        >\r\n                                            {getFieldDecorator('season', {\r\n                                                initialValue: [moment(productData.pdu_season_from, dateFormat), moment(productData.pdu_season_to, dateFormat)],\r\n                                                rules: [{\r\n                                                    required: true, message: 'Please input season of your tour!'\r\n                                                }]\r\n                                            })(\r\n                                                <RangePicker ref={season => this.season = season} name=\"avaliable\" size=\"large\" format={dateFormat} onChange={this.seasonOnChange} />\r\n                                            )}\r\n                                        </FormItem>\r\n                                    </Col>\r\n                                    <Col span={13}>\r\n                                        <FormItem\r\n                                            label=\"Date not allowed\"\r\n                                        >\r\n                                            {getFieldDecorator('notAllowed', {\r\n                                                initialValue: moment(productData.pdu_unavailable_date, dateFormat)\r\n                                            })(\r\n                                                // <DatePicker ref={notallowed => this.notallowed = notallowed} size=\"large\" format={dateFormat} onChange={this.onChangeNotAllowed} />\r\n                                                <div>\r\n                                                    <TextArea\r\n                                                        onClick={this.onClickTextarea}\r\n                                                        value={this.state.textareaDays}\r\n                                                        readOnly\r\n                                                    />\r\n\r\n                                                    <div className={this.state.pickerClassName}>\r\n                                                        <DayPicker\r\n                                                            initialMonth={this.state.selectedDays[0]}\r\n                                                            selectedDays={this.state.selectedDays}\r\n                                                            onDayClick={this.handleDayClick}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            )}\r\n                                        </FormItem>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row type=\"flex\" justify=\"space-around\" style={{textAlign:\"left\"}}>\r\n                                    <Col span={23}>\r\n                                        <FormItem\r\n                                            label=\"Please write any additional information for your guest\"\r\n                                        >\r\n                                            {getFieldDecorator('addNote', {\r\n                                                initialValue: productData.pdu_additional_info,\r\n                                                rules: [{\r\n                                                    required: true, message: 'Please input any additional information for your guest!'\r\n                                                }]\r\n                                            })(\r\n                                                <TextArea autosize={{ minRows: 3, maxRows: 4 }} />\r\n                                            )}\r\n                                        </FormItem>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <Row type=\"flex\" justify=\"center\" style={{marginTop:20}}> \r\n                                <Col span={5}>\r\n                                <Spin spinning={this.state.loading} size=\"large\">\r\n                                    <Button name=\"completeBtn\" htmlType=\"submit\" size=\"large\" type=\"primary\" block style={{height:60}}><span style={{fontSize:\"1.5em\"}}>완 료</span></Button>\r\n                                </Spin>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst WrappedModifyProductForm = Form.create()(ModifyProductForm);\r\n\r\n\r\n\r\nexport default class extends React.Component {\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Header selected=\"modifyproduct\" />                \r\n                <WrappedModifyProductForm/>\r\n                <Footer selected=\"modifyproduct\" />\r\n            </div>\r\n        )\r\n    }\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA8CA;AAEA;AADA;AAKA;AADA;AAGA;AACA;AAvDA;AAyDA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAHA;AAQA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAFA;AADA;AACA;AAKA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AAzGA;AA2GA;AAEA;AADA;AAKA;AAAA;AAAA;AADA;AAGA;AACA;AApHA;AAqHA;AAEA;AADA;AAKA;AAAA;AAAA;AADA;AAGA;AACA;AA9HA;AAgIA;AACA;AACA;AAlIA;AAoIA;AACA;AADA;AACA;AAEA;AACA;AACA;AAzIA;AA0JA;AACA;AACA;AA5JA;AA8JA;AACA;AACA;AAhKA;AAkKA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAvKA;AAyKA;AACA;AAAA;AACA;AADA;AAGA;AACA;AA9KA;AAgLA;AACA;AADA;AACA;AAEA;AACA;AACA;AArLA;AAuLA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AADA;AACA;AAKA;AACA;AACA;AAnMA;AAqMA;AACA;AAAA;AACA;AACA;AACA;AADA;AAIA;AACA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAHA;AAgBA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AApQA;AAsQA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AA7QA;AA+QA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAtRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAjBA;AAmBA;AArBA;AAsBA;AACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;;;AA8OA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AADA;AAGA;AAAA;AADA;AAJA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AADA;AAFA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AADA;AAFA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AADA;AAFA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AADA;AAGA;AADA;AAJA;AASA;AACA;AAAA;AAAA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaxvBA;AACA;AAyvBA;AACA;;;;;;;;;;;;;;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AATA;AACA;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}