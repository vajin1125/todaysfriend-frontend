{"version":3,"file":"static/webpack/static\\development\\pages\\booking.js.ea44452169a13a297674.hot-update.js","sources":["webpack:///./pages/booking.js"],"sourcesContent":["import { Row, Col } from 'antd'\nimport Link from 'next/link'\nimport { Form, Icon, Input, Button, Select, DatePicker,InputNumber, AutoComplete, Spin, Modal } from 'antd'\nimport axios from 'axios'\nimport Router from 'next/router'\nimport { base_url } from './components/base_url'\nimport { Header } from './components/Header'\nimport { Footer } from './components/Footer'\nimport {booking_top_banner} from './components/images'\nimport { language_list } from './components/language_list'\nimport { country_list } from './components/country_list'\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst { TextArea } = Input;\n\nconst countryOption = country_list.map((country) =>\n    <Option key={country.toString()} value={country}>{country}</Option>\n)\n\nconst languageOption = language_list.map((language) => \n    <Option key={language.name.toString()} value={language.name}>{language.name}</Option>\n)\n\nfunction agesChange(value) {\n    console.log(`selected ${value}`);\n}\n\nfunction nationalityChange(value) {\n    console.log(`selected ${value}`);\n}\n\nfunction genderChange(value) {\n    console.log(`selected ${value}`);\n}\n\nfunction langChange(value) {\n    console.log(`selected ${value}`);\n}\n\n// inputNumber\nfunction inputNumberonChange(value) {\n    console.log('changed', value);\n}\n\n\nclass BookingForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            confirmDirty: false,\n            filterdata: [],\n            bookingdate: '',\n            loading: false,\n        }\n    }\n\n    autocompleteCountry = (value) => {\n        if (value == '')\n            this.setState({\n                filterdata: []\n            })\n        else\n            this.setState({\n                filterdata: country_list.filter((s) => s.toLowerCase().substring(0, value.length) === value.toLowerCase())\n            })\n    }\n\n    // Validated Email\n    handleConfirmEmailBlur = (e) => {\n        const value = e.target.value;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    }\n\n    validateToNextEmail = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && this.state.confirmDirty) {\n            form.validateFields(['emailConfirm'], { force: true });\n        }\n        callback();\n    }\n\n    compareToFirstEmail = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && value !== form.getFieldValue('email')) {\n            callback('Two email that you enter is inconsistent!');\n        } else {\n            callback();\n        }\n    }\n\n    datepickeronChange = (date, dateString) => {\n        console.log(date, dateString);\n        this.setState({\n            bookingdate: dateString\n        })\n    }\n\n    onChangeMainSNS = (value) => {\n        console.log(value);\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                this.setState({\n                    loading: true\n                });\n                console.log('Received values of form: ', values);\n                const bookingdate = this.state.bookingdate\n                console.log('Booking Date:', bookingdate)\n                \n                axios.post( base_url + '/api/booking_register', {values, bookingdate})\n                .then(function (response) {\n                    console.log('response:', response);\n                    if (response.data['type'] === 'success') {\n\n                        sessionStorage.setItem('booking_tourdate', bookingdate)\n                        sessionStorage.setItem('booking_language', values.language)\n                        sessionStorage.setItem('booking_numberofpeople', values.numberOfPeople)\n                        sessionStorage.setItem('booking_bookername', values.firstname + ' ' + values.lastname)\n                        sessionStorage.setItem('booking_email', values.email)\n\n                        Router.push('/summary')\n                    } else {\n                        this.setState({\n                            loading: false\n                        })\n                        Modal.error({\n                            title: 'Your booking has been failed!',\n                            content: 'Please try again !',\n                        });\n                    }\n                        \n                })\n                .catch(function (error) {\n                    console.log('error:', error);\n                });\n            }\n        });\n    }\n\n    render() {\n\n        const { getFieldDecorator } = this.props.form;\n\n        return(\n            <div>\n                <Row>\n                    <Col span={24} style={{height:'20vw',position:'relative'}}>\n                        <img src={booking_top_banner} alt='booking_top_banner' style={{width:'100%',position:'absolute',left:0,bottom:0}}/>\n                    </Col>\n                </Row>\n                <h1 style={{textAlign:\"center\",marginTop:30}}>Booking</h1>\n                <Row type=\"flex\">\n                    <Col span={12} style={{margin:\"0 auto\"}}>\n                        <p style={{textAlign:\"center\",fontWeight:600}}>\n                            We need brief information to confirm your reservation. We help locals who are prepareing to show you a treal local trip make more efficient arrangements and guidance. 'SNS ID' is not a mandatory entry. We use that in order to contact you immediately if there is any change in the circumstances of the tour that is unavoidable.\n                        </p>\n                    </Col>\n                </Row>\n                <Form className=\"booking-form\" onSubmit={this.handleSubmit}>\n                    <div style={{border:\"1px solid rgba(0, 0, 0, 0.2)\",borderRadius:10,padding:\"30px 20px\",width:800,margin:\"0 auto\"}}>\n                        <Row type=\"flex\" justify=\"space-around\">\n                            <Col span={10}>\n                                <FormItem\n                                    label=\"First Name\"\n                                >\n                                    {getFieldDecorator('firstname', {\n                                        rules: [{\n                                            required: true, message: 'Please input your first name!'\n                                        }]\n                                    })(\n                                        <Input size=\"large\" placeholder=\"First Name\" />\n                                    )}\n                                </FormItem>\n                            </Col>\n                            <Col span={10}>\n                                <FormItem\n                                    label=\"Last Name\"\n                                >\n                                    {getFieldDecorator('lastname', {\n                                        rules: [{\n                                            required: true, message: 'Please input your last name!'\n                                        }]\n                                    })(\n                                        <Input size=\"large\" placeholder=\"Last Name\" />\n                                    )}\n                                </FormItem>\n                            </Col>\n                        </Row>\n                        <Row type=\"flex\" justify=\"space-around\">\n                            <Col span={10}>\n                                <FormItem\n                                    label=\"Age\"\n                                >\n                                    {getFieldDecorator('agerange', {\n                                        rules: [{\n                                            required: true, message: 'Please select your age range!'\n                                        }]\n                                    })(\n                                        <Select size=\"large\" onChange={agesChange} placeholder=\"Select your age ranges\">\n                                            <Option value=\"10s\">10s</Option>\n                                            <Option value=\"20s\">20s</Option>\n                                            <Option value=\"30s\">30s</Option>\n                                            <Option value=\"40s\">40s</Option>\n                                            <Option value=\"50s\">50s</Option>\n                                            <Option value=\"60s\">60s</Option>\n                                        </Select>\n                                    )}\n                                </FormItem>\n                            </Col>\n                            <Col span={10}>\n                                <FormItem\n                                    label=\"Nationality\"\n                                >\n                                    {getFieldDecorator('nationality', {\n                                        rules: [{\n                                            required: true, message: 'Please input your nationality!'\n                                        }]\n                                    })(\n                                        <AutoComplete\n                                            dataSource={this.state.filterdata}\n                                            style={{ width: \"100%\" }}\n                                            size=\"large\"\n                                            // onSelect={onSelect}\n                                            onSearch={this.autocompleteCountry}\n                                            mode=\"multiple\"\n                                            placeholder=\"Please enter your nationality\"\n                                        />\n                                    )}\n                                </FormItem>\n                            </Col>\n                        </Row>\n                        <Row type=\"flex\" justify=\"space-around\">\n                            <Col span={10}>\n                                <FormItem\n                                    label=\"Gender\"\n                                >\n                                    {getFieldDecorator('gender', {\n                                        rules: [{\n                                            required: true, message: 'Please select your gender!'\n                                        }]\n                                    })(\n                                        <Select size=\"large\" onChange={genderChange} placeholder=\"Select your gender\">\n                                            <Option value=\"man\">Man</Option>\n                                            <Option value=\"woman\">Woman</Option>\n                                        </Select>\n                                    )}\n                                </FormItem>\n                            </Col>\n                            <Col span={10}>\n                                <FormItem\n                                    label=\"Language\"\n                                >\n                                    {getFieldDecorator('language', {\n                                        rules: [{\n                                            required: true, message: 'Please select your languages!'\n                                        }]\n                                    })(\n                                        <Select size=\"large\" mode=\"multiple\" onChange={langChange} placeholder=\"Select your languages\">\n                                            {languageOption}\n                                        </Select>\n                                    )}\n                                </FormItem>\n                            </Col>\n                        </Row>\n                        <Row type=\"flex\" justify=\"space-around\">\n                            <Col span={10}>\n                                <FormItem\n                                    label=\"Email\"\n                                >\n                                    {getFieldDecorator('email', {\n                                        rules: [{\n                                            required: true, message: 'Please input your Email!'\n                                        }, { \n                                            type: 'email', message: 'The input is not valid!'\n                                        }, {\n                                            validator: this.validateToNextEmail,\n                                        }]\n                                    })(\n                                        <Input size=\"large\" placeholder=\"Email\" />\n                                    )}\n                                </FormItem>\n                            </Col>\n                            <Col span={10}>\n                                <FormItem\n                                    label=\"Confirmed Email\"\n                                >\n                                    {getFieldDecorator('emailConfirm', {\n                                        rules: [{\n                                            type: 'email', message: 'The input is not valid!'\n                                        }, {\n                                            required: true, message: 'Please confirm your email!'\n                                        }, {\n                                            validator: this.compareToFirstEmail,\n                                        }]\n                                    })(\n                                        <Input size=\"large\" placeholder=\"Email confirmation\" onBlur={this.handleConfirmEmailBlur}/>\n                                    )}\n                                </FormItem>\n                            </Col>\n                        </Row>\n                        <Row type=\"flex\" justify=\"space-around\">\n                            <Col span={10}>\n                                <FormItem\n                                    label=\"Date\"\n                                >\n                                    {getFieldDecorator('bookingDate', {\n                                        rules: [{\n                                            required: true, message: 'Please select booking date!'\n                                        }]\n                                    })(\n                                        <DatePicker size=\"large\" style={{width:\"100%\"}} onChange={this.datepickeronChange} />\n                                    )}\n                                </FormItem>\n                            </Col>\n                            <Col span={10}>\n                                <FormItem\n                                    label=\"Cell Number (Including country number)\"\n                                >\n                                    {getFieldDecorator('phone', {\n                                        rules: [{\n                                            required: true, message: 'Please input your cell number!'\n                                        }]\n                                    })(\n                                        <Input size=\"large\" placeholder=\"Cell Number (Including country number)\" />\n                                    )}\n                                </FormItem>\n                            </Col>\n                        </Row>\n                        <Row type=\"flex\" justify=\"space-around\">\n                            <Col span={10}>\n                                <FormItem\n                                    label=\"Mainly used SNS\"\n                                >\n                                    {getFieldDecorator('mainSNS', {\n            \n                                    })(\n                                        <Select size=\"large\" onChange={this.onChangeMainSNS} placeholder=\"Select your mainly use SNS Name\">\n                                            <Option value=\"Twitter\">Twitter</Option>\n                                            <Option value=\"Facebook\">Facebook</Option>\n                                            <Option value=\"Instagram\">Instagram</Option>\n                                            <Option value=\"Whatapp\">Whatapp</Option>\n                                            <Option value=\"Snapchat\">Snapchat</Option>\n                                        </Select>\n                                    )}\n                                </FormItem>\n                            </Col>\n                            <Col span={10}>\n                                <FormItem\n                                    label=\"SNS ID\"\n                                >\n                                    {getFieldDecorator('snsId', {\n                                        \n                                    })(\n                                        <Input size=\"large\" placeholder=\"SNS ID\" />                                        \n                                    )}\n                                </FormItem>\n                            </Col>\n                        </Row>\n                        <Row type=\"flex\" justify=\"space-around\">\n                            <Col span={10}>\n                                <FormItem\n                                    label=\"Number of People\"\n                                >\n                                    {getFieldDecorator('numberOfPeople', {\n                                        rules: [{\n                                            required: true, message: 'Please input number of people!'\n                                        }, {\n                                            type: 'number', message: 'Invalided input!'\n                                        }]\n                                    })(\n                                        <InputNumber size=\"large\" style={{width:\"100%\"}} min={1} max={100000} onChange={inputNumberonChange} placeholder=\"Number of people\"/>\n                                    )}\n                                </FormItem>\n                            </Col>\n                            <Col span={10}>\n                                <FormItem\n                                    label=\"Things of Demand\"\n                                >\n                                    {getFieldDecorator('note', {\n                                        \n                                    })(\n                                        <TextArea placeholder=\"Things to demand\" autosize={{ minRows: 3, maxRows: 10 }} />\n                                    )}\n                                </FormItem>\n                            </Col>\n                        </Row>\n                    </div>\n                    <Row type=\"flex\" justify=\"center\" style={{marginTop:30}}>\n                        <Col span={4}>\n                            <Spin spinning={this.state.loading} size=\"large\">\n                            <Button htmlType=\"submit\" size=\"large\" type=\"primary\" block>Confirm</Button>\n                            </Spin>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n        )\n    }\n}\nconst WrappedBookingForm = Form.create()(BookingForm);\n\nexport default class extends React.Component {\n    render(){\n        return(\n            <div>\n                <Header selected=\"booking\" />                \n                <WrappedBookingForm/>\n                <Footer selected=\"booking\" />\n            </div>\n        )\n    }\n}"],"mappings":"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","sourceRoot":""}